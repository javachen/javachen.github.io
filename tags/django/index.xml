<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>django on JavaChen Blog - Ramblings of a coder</title>
    <link>http://javachen.github.io/tags/django/</link>
    <description>Recent content in django on JavaChen Blog - Ramblings of a coder</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Fri, 30 Jan 2015 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://javachen.github.io/tags/django/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Django中SQL查询</title>
      <link>http://javachen.github.io/2015/01/30/raw-sql-query-in-django/</link>
      <pubDate>Fri, 30 Jan 2015 00:00:00 +0000</pubDate>
      
      <guid>http://javachen.github.io/2015/01/30/raw-sql-query-in-django/</guid>
      <description>当 Django 中模型提供的查询 API 不能满足要求时，你可能需要使用原始的 sql 查询，这时候就需要用到 Manager.raw() 方法。 Manager 类提供下面的一个方法，可以用于执行 sql： 1 Manager.raw(raw_query, params=None,</description>
    </item>
    
    <item>
      <title>Django中的ORM</title>
      <link>http://javachen.github.io/2015/01/15/django-orm/</link>
      <pubDate>Thu, 15 Jan 2015 00:00:00 +0000</pubDate>
      
      <guid>http://javachen.github.io/2015/01/15/django-orm/</guid>
      <description>通过《如何创建一个Django网站》大概清楚了如何创建一个简单的 Django 网站，并了解了Django 中模板和模型使用方法。本篇文章主要在此基础上，了</description>
    </item>
    
    <item>
      <title>Django中的模型</title>
      <link>http://javachen.github.io/2015/01/14/django-model/</link>
      <pubDate>Wed, 14 Jan 2015 00:00:00 +0000</pubDate>
      
      <guid>http://javachen.github.io/2015/01/14/django-model/</guid>
      <description>Django 中的模型主要用于定义数据的来源信息，其包括一些必要的字段和一些对存储的数据的操作。通常，一个模型对应着数据库中的一个表。 简单的概念： Django 中每</description>
    </item>
    
  </channel>
</rss>