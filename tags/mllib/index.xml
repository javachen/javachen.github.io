<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>mllib on JavaChen Blog - Ramblings of a coder</title>
    <link>https://javachen.github.io/tags/mllib/</link>
    <description>Recent content in mllib on JavaChen Blog - Ramblings of a coder</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Fri, 17 Apr 2015 00:00:00 +0000</lastBuildDate>
    
        <atom:link href="https://javachen.github.io/tags/mllib/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Spark MLlib中的协同过滤</title>
      <link>https://javachen.github.io/2015/04/17/spark-mllib-collaborative-filtering/</link>
      <pubDate>Fri, 17 Apr 2015 00:00:00 +0000</pubDate>
      
      <guid>https://javachen.github.io/2015/04/17/spark-mllib-collaborative-filtering/</guid>
      <description>本文主要通过Spark官方的例子理解ALS协同过滤算法的原理和编码过程，然后通过对电影进行推荐来熟悉一个完整的推荐过程。 协同过滤 协同过滤常被</description>
    </item>
    
  </channel>
</rss>