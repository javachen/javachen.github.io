<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>docker on JavaChen Blog - Ramblings of a coder</title>
    <link>https://blog.javachen.space/tags/docker/</link>
    <description>Recent content in docker on JavaChen Blog - Ramblings of a coder</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Thu, 26 Dec 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://blog.javachen.space/tags/docker/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>一些有用的Docker镜像</title>
      <link>https://blog.javachen.space/2019/12/26/some-usedfull-docker-images/</link>
      <pubDate>Thu, 26 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://blog.javachen.space/2019/12/26/some-usedfull-docker-images/</guid>
      <description>1、watchtower：自动更新 Docker 容器 Watchtower 监视运行容器并监视这些容器最初启动时的镜像有没有变动。当 Watchtower 检测到一个镜像已经有变动时，它会使用新镜</description>
    </item>
    
    <item>
      <title>Docker常用命令</title>
      <link>https://blog.javachen.space/2019/11/28/some-commads-of-docker/</link>
      <pubDate>Thu, 28 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://blog.javachen.space/2019/11/28/some-commads-of-docker/</guid>
      <description>获取docker容器的主机虚拟网卡 1 2 3 4 5 6 7 8 9 10 11 12 13 14 #首先得到容器进程的pid CON_PID=$(docker inspect &amp;#39;--format={{ .State.Pid }}&amp;#39; test) #首先得到容器的命名空间目录 CON_NET_SANDBOX=$(docker inspect &amp;#39;--format={{ .NetworkSettings.SandboxKey }}&amp;#39; test)</description>
    </item>
    
    <item>
      <title>Docker Compose安装Redis集群</title>
      <link>https://blog.javachen.space/2019/08/11/install-redis-cluster-with-docker-compose/</link>
      <pubDate>Sun, 11 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>https://blog.javachen.space/2019/08/11/install-redis-cluster-with-docker-compose/</guid>
      <description>拉取镜像： 1 docker pull redis 使用host网络进行搭建集群 1 2 3 4 5 6 7 8 9 10 11 12 13 14 docker run -d --name redis-node01 --net host \ -v /data/docker/redis/node01:/data redis --cluster-enabled yes \ --cluster-config-file node01.conf --port 6380 --appendonly yes \ --requirepass &amp;#34;123456&amp;#34; docker run -d --name redis-node02 --net host \ -v /data/docker/redis/node02:/data</description>
    </item>
    
    <item>
      <title>Vagrant搭建Docker开发环境</title>
      <link>https://blog.javachen.space/2019/08/04/docker-with-vagrant/</link>
      <pubDate>Sun, 04 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>https://blog.javachen.space/2019/08/04/docker-with-vagrant/</guid>
      <description>安装Virtual Box Virtual Box 下载地址 https://www.virtualbox.org/wiki/Downloads 安装Vagrant Vagrant 是一款可以结合 Virtual Box 进行虚拟机安装、 管理的软件，基于 Ruby ，因为已经编译为应用程序，所以可以</description>
    </item>
    
    <item>
      <title>Docker搭建hadoop和hive环境</title>
      <link>https://blog.javachen.space/2019/07/26/install-hadoop-and-hive-with-docker/</link>
      <pubDate>Fri, 26 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>https://blog.javachen.space/2019/07/26/install-hadoop-and-hive-with-docker/</guid>
      <description>文将介绍如何在docker上从零开始安装hadoop以及hive环境。本文不会介绍如何安装docker，也不会过多的介绍docker各个命令</description>
    </item>
    
    <item>
      <title>使用Docker安装MongoDB</title>
      <link>https://blog.javachen.space/2019/07/16/install-mongodb-with-docker/</link>
      <pubDate>Tue, 16 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>https://blog.javachen.space/2019/07/16/install-mongodb-with-docker/</guid>
      <description>使用Docker安装 下载镜像： 1 docker pull mongo 创建目录： 1 2 3 mkdir -p /data/docker/mongodb/data/ mkdir -p /data/docker/mongo/configdb 开启端口： 1 firewall-cmd --zone=public --add-port=27017/tcp --permanent 运行容器： 1 2 3 4 docker run -d -p 27017:27017 \ -v /data/docker/mongodb/data/:/data/db/ \ -v /data/docker/mongo/configdb:/data/configdb \ --auth --name=mongo mongo --a</description>
    </item>
    
    <item>
      <title>使用Docker安装MySql</title>
      <link>https://blog.javachen.space/2019/07/16/install-mysql-with-docker/</link>
      <pubDate>Tue, 16 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>https://blog.javachen.space/2019/07/16/install-mysql-with-docker/</guid>
      <description>Docker的Mysql镜像说明请参考 https://hub.docker.com/_/mysql 使用Docker安装 下载镜像： 1 docker pull mysql:5.7 启动命令： 1 docker run --name mysql -e MYSQL_ROOT_PASSWORD=my-secret-pw -d mysql:5.7 添加挂载，运行容器： 1 2 3 4 5 6 docker</description>
    </item>
    
  </channel>
</rss>