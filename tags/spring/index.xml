<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>spring on 关注Java、Hadoop、Kubernetes和BI</title>
    <link>https://blog.javachen.space/tags/spring/</link>
    <description>Recent content in spring on 关注Java、Hadoop、Kubernetes和BI</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sat, 27 Jul 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://blog.javachen.space/tags/spring/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>缓存和SpringCache介绍</title>
      <link>https://blog.javachen.space/2019/07/27/cache-and-spring-cache/</link>
      <pubDate>Sat, 27 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>https://blog.javachen.space/2019/07/27/cache-and-spring-cache/</guid>
      <description>1 缓存 1.1 什么是缓存？ 我们使用缓存时，我们的业务系统大概的调用流程如下图： 当我们查询一条数据时，先去查询缓存，如果缓存有就直接返回，如果没有就</description>
    </item>
    
    <item>
      <title>SpringBoot中Tomcat调优</title>
      <link>https://blog.javachen.space/2019/07/26/tomcat-tuning-in-spring-boot/</link>
      <pubDate>Fri, 26 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>https://blog.javachen.space/2019/07/26/tomcat-tuning-in-spring-boot/</guid>
      <description>Spring Boot中Tomcat调优 1 2 3 4 5 6 server:tomcat:accept-count:100#等待队列长度，默认为100max-co</description>
    </item>
    
    <item>
      <title>DevTools in Spring Boot</title>
      <link>https://blog.javachen.space/2016/02/22/devtools-in-spring-boot/</link>
      <pubDate>Mon, 22 Feb 2016 00:00:00 +0000</pubDate>
      
      <guid>https://blog.javachen.space/2016/02/22/devtools-in-spring-boot/</guid>
      <description>本文主要了解Spring Boot 1.3.0新添加的spring-boot-devtools模块的使用，该模块主要是为了提高开发者开发Spring B</description>
    </item>
    
    <item>
      <title>Spring Boot Profile使用</title>
      <link>https://blog.javachen.space/2016/02/22/profile-usage-in-spring-boot/</link>
      <pubDate>Mon, 22 Feb 2016 00:00:00 +0000</pubDate>
      
      <guid>https://blog.javachen.space/2016/02/22/profile-usage-in-spring-boot/</guid>
      <description>Spring Boot使用@Profile注解可以实现不同环境下配置参数的切换，任何@Component或@Configuration注解的类都可以使用</description>
    </item>
    
    <item>
      <title>Spring AOP Example Tutorial</title>
      <link>https://blog.javachen.space/2015/03/11/spring-aop-example-tutorial-aspect-advice-pointcut-joinpoint-annotations-xml-configuration/</link>
      <pubDate>Wed, 11 Mar 2015 00:00:00 +0000</pubDate>
      
      <guid>https://blog.javachen.space/2015/03/11/spring-aop-example-tutorial-aspect-advice-pointcut-joinpoint-annotations-xml-configuration/</guid>
      <description>这是一篇翻译，原文：Spring AOP Example Tutorial – Aspect, Advice, Pointcut, JoinPoint, Annotations, XML Configuration Spring 框架发展出了两个核心概念：依赖注入 和面向切面编程（AOP）。我们已经了解了 Spring 的依赖注</description>
    </item>
    
    <item>
      <title>使用Spring Boot和Gradle创建AngularJS项目</title>
      <link>https://blog.javachen.space/2015/01/06/build-app-with-spring-boot-and-gradle/</link>
      <pubDate>Tue, 06 Jan 2015 00:00:00 +0000</pubDate>
      
      <guid>https://blog.javachen.space/2015/01/06/build-app-with-spring-boot-and-gradle/</guid>
      <description>Spring Boot 是由 Pivotal 团队提供的全新框架，其设计目的是用来简化新 Spring 应用的初始搭建以及开发过程。该框架使用了特定的方式来进行配置，从而使开发人员不再需要定</description>
    </item>
    
    <item>
      <title>Spring集成JPA2.0</title>
      <link>https://blog.javachen.space/2014/11/24/spring-with-jpa2/</link>
      <pubDate>Mon, 24 Nov 2014 00:00:00 +0000</pubDate>
      
      <guid>https://blog.javachen.space/2014/11/24/spring-with-jpa2/</guid>
      <description>JPA 全称 Java Persistence API，是Java EE 5标准之一，是一个 ORM 规范，由厂商来实现该规范，目前有 Hibernate、OpenJPA、TopLink、Ecl</description>
    </item>
    
    <item>
      <title>Spring源码整体架构</title>
      <link>https://blog.javachen.space/2014/09/29/spring-source-codes/</link>
      <pubDate>Mon, 29 Sep 2014 00:00:00 +0000</pubDate>
      
      <guid>https://blog.javachen.space/2014/09/29/spring-source-codes/</guid>
      <description>前言 Spring 是一个开源框架，是为了解决企业应用程序开发复杂性而创建的。框架的主要优势之一就是其分层架构，分层架构允许您选择使用哪一个组件，同时为 J2EE</description>
    </item>
    
  </channel>
</rss>