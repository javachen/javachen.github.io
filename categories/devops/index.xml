<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>devops on 关注Java、Hadoop、Kubernetes和BI</title>
    <link>https://blog.javachen.space/categories/devops/</link>
    <description>Recent content in devops on 关注Java、Hadoop、Kubernetes和BI</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Fri, 07 Feb 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://blog.javachen.space/categories/devops/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>容器化部署OpenLdap</title>
      <link>https://blog.javachen.space/2020/02/07/install-openldap-with-docker-and-k8s/</link>
      <pubDate>Fri, 07 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://blog.javachen.space/2020/02/07/install-openldap-with-docker-and-k8s/</guid>
      <description>使用Docker安装 使用Docker安装： 1 2 3 4 5 6 7 docker run -it -d --name ldap \ -p 389:389 -p 636:636 \ --env LDAP_ORGANISATION=&amp;#34;JAVACHNE com&amp;#34; \ --env LDAP_DOMAIN=&amp;#34;javachen.com&amp;#34; \ --env LDAP_BASE_DN=dc=javachen,dc=com \ --env LDAP_ADMIN_PASSWORD=&amp;#34;admin&amp;#34; \ osixia/openldap docker-compose.y</description>
    </item>
    
    <item>
      <title>安装Confluence</title>
      <link>https://blog.javachen.space/2020/02/06/install-confluence/</link>
      <pubDate>Thu, 06 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://blog.javachen.space/2020/02/06/install-confluence/</guid>
      <description>安装Postgres 1 docker run -d --name postgres -p 5432:5432 -e POSTGRES_PASSWORD=123456 postgres 创建数据库： 1 docker exec -it postgres psql -Upostgres -w -c &amp;#34;CREATE DATABASE confluence WITH OWNER postgres;&amp;#34; 如果是重装，则需要重建数据库： 1 2 3 4 5 REVOKE CONNECT ON DATABASE confluence FROM public; SELECT</description>
    </item>
    
    <item>
      <title>安装Jira</title>
      <link>https://blog.javachen.space/2020/02/05/install-jira/</link>
      <pubDate>Wed, 05 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://blog.javachen.space/2020/02/05/install-jira/</guid>
      <description>安装Postgres 1 docker run -d --name postgres -p 5432:5432 -e POSTGRES_PASSWORD=123456 postgres 创建数据库： 1 docker exec -it postgres psql -Upostgres -w -c &amp;#34;CREATE DATABASE jira WITH OWNER postgres;&amp;#34; 如果是重装，则需要重建数据库： 1 2 3 4 5 REVOKE CONNECT ON DATABASE jira FROM public; SELECT</description>
    </item>
    
    <item>
      <title>Devops阅读清单</title>
      <link>https://blog.javachen.space/2020/01/13/devops-reading-list/</link>
      <pubDate>Mon, 13 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://blog.javachen.space/2020/01/13/devops-reading-list/</guid>
      <description>DevOps 管理规范 https://www.kancloud.cn/huyipow/devops/971137 Docker — 从入门到实践：https://www.cntofu.com/book/139/index.html Kubernetes中文指</description>
    </item>
    
    <item>
      <title>Systemd</title>
      <link>https://blog.javachen.space/2020/01/11/systemd/</link>
      <pubDate>Sat, 11 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://blog.javachen.space/2020/01/11/systemd/</guid>
      <description>Systemd 是 Linux 下的一款系统和服务管理器，兼容 SysV 和 LSB 的启动脚本。systemd 的特性有：支持并行化任务；同时采用 socket 式与 D-Bus 总线式激活服务；按需启动守护进</description>
    </item>
    
    <item>
      <title>配置Hugo主题Even</title>
      <link>https://blog.javachen.space/2020/01/07/config-hugo-theme-even/</link>
      <pubDate>Tue, 07 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://blog.javachen.space/2020/01/07/config-hugo-theme-even/</guid>
      <description>安装 Hugo 建议使用 Hugo 0.54.0，主题未适配最新版本的 Hugo 0.58.3，因此在显示时主页或错误地显示为 Posts，具体情况如果有需要建议实践测试。</description>
    </item>
    
    <item>
      <title>搭建SSH堡垒机服务器</title>
      <link>https://blog.javachen.space/2020/01/06/setup-ssh-bastion-service/</link>
      <pubDate>Mon, 06 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://blog.javachen.space/2020/01/06/setup-ssh-bastion-service/</guid>
      <description>机器规划 准备两台服务器： 名称 IP 操作系统 说明 登录方式 test001 192.168.56.21 CentOS 7.7 堡垒机 SSH Kkey test002 192.168.56.22 CentOS 7.7 应用服务器 密码 配置堡垒机 配置SSHD 通过修改配置文件，显示SSH</description>
    </item>
    
    <item>
      <title>Bash查找和替换</title>
      <link>https://blog.javachen.space/2020/01/05/bash-find-and-replace/</link>
      <pubDate>Sun, 05 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://blog.javachen.space/2020/01/05/bash-find-and-replace/</guid>
      <description>vim中查找 使用/查找 在vim中编辑或者新建一个文件： 1 :e log.txt 输入一些内容： 1 2 hello world this is log 输入/，再加关键字进行搜索： 敲击回车键之后，你会看到</description>
    </item>
    
    <item>
      <title>Tig</title>
      <link>https://blog.javachen.space/2020/01/04/tig/</link>
      <pubDate>Sat, 04 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://blog.javachen.space/2020/01/04/tig/</guid>
      <description>Tig 是 git 的基于 ncurses 的文本界面。它主要用作 Git 仓库浏览器，但也有助于在块级别暂存提交更改，并作为各种 Git 命令的输出分页器。 安装 Github仓库：htt</description>
    </item>
    
    <item>
      <title>Git提交文件工作流程</title>
      <link>https://blog.javachen.space/2020/01/01/git-commit-files-flow/</link>
      <pubDate>Wed, 01 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://blog.javachen.space/2020/01/01/git-commit-files-flow/</guid>
      <description>Git配置 全局配置： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 $ git config --global -l user.email=junecloud@163.com user.name=chenzj alias.st=status alias.throw=reset --hard HEAD alias.throwj=reset ==jard HEAD^ alias.co=checkout alias.ls=ls-files alias.ci=commit -a -v alias.br=branch alias.unstage=reset HEAD alias.uncommit=reset --soft HEAD^ alias.amend=commit --amend alias.who=shortlog -n -s --no-merges alias.g=grep -n --color -E alias.cp=cherry-pick -x alias.cb=checkout</description>
    </item>
    
    <item>
      <title>安装Prometheus、Grafana、Alertmanager</title>
      <link>https://blog.javachen.space/2019/12/18/install-prometheus-and-grafana-and-alertmanager/</link>
      <pubDate>Wed, 18 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://blog.javachen.space/2019/12/18/install-prometheus-and-grafana-and-alertmanager/</guid>
      <description>安装Prometheus 1、下载最新版本：https://prometheus.io/download/ 1 2 3 4 5 6 7 wget https://github.com/prometheus/prometheus/releases/download/v2.14.0/prometheus-2.14.0.linux-amd64.tar.gz tar zxvf prometheus-2.14.0.linux-amd64.tar.gz mv prometheus-2.14.0.linux-amd64 /usr/local/prometheus cd /usr/local/prometheus/ &amp;amp;&amp;amp;</description>
    </item>
    
    <item>
      <title>Ceph块设备测试</title>
      <link>https://blog.javachen.space/2019/11/30/ceph-rbd-test/</link>
      <pubDate>Sat, 30 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://blog.javachen.space/2019/11/30/ceph-rbd-test/</guid>
      <description>在搭建了一个Ceph多节点的集群之后，你可以在客户端上连接集群使用Ceph存储上的设备，比如块设备。 配置客户端 1、在管理节点上，通过 ceph-deploy 把 Ceph 安</description>
    </item>
    
    <item>
      <title>安装单节点Ceph集群</title>
      <link>https://blog.javachen.space/2019/11/24/install-ceph-sinle-node/</link>
      <pubDate>Sun, 24 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://blog.javachen.space/2019/11/24/install-ceph-sinle-node/</guid>
      <description>本文主要记录在虚拟机中安装Ceph单节点集群的过程，其实多配置几个节点，也就是安装集群的过程。 Ceph中午文档：http://docs.ce</description>
    </item>
    
    <item>
      <title>Tengine&#43;Lua&#43;GraphicsMagick动态裁剪图片</title>
      <link>https://blog.javachen.space/2019/08/10/tengine-lua-graphicsMagick-resize-picture/</link>
      <pubDate>Sat, 10 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>https://blog.javachen.space/2019/08/10/tengine-lua-graphicsMagick-resize-picture/</guid>
      <description>软件列表 Tengine：https://github.com/alibaba/tengine Lua：http://www.lua.org/f</description>
    </item>
    
    <item>
      <title>网络通信协议</title>
      <link>https://blog.javachen.space/2019/07/27/internet-protocal/</link>
      <pubDate>Sat, 27 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>https://blog.javachen.space/2019/07/27/internet-protocal/</guid>
      <description>1 网络通信 1.1 协议 TCP/IP UDP/IP Multcast 单播.每次只有两个实体相互通信，发送端和接收端都是唯一确定的 IP4中，0.0.0.0到223.255.255.255属</description>
    </item>
    
    <item>
      <title>安装阿波罗配置中心</title>
      <link>https://blog.javachen.space/2019/07/15/apollo/</link>
      <pubDate>Mon, 15 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>https://blog.javachen.space/2019/07/15/apollo/</guid>
      <description>安装 安装阿波罗 1、 在虚拟机安装git和mysql 1 yum install git mysql -y 2、克隆安装脚本 1 git clone https://github.com/nobodyiam/apollo-build-scripts.git 3、配置数据策略 在虚拟机访问mysql，然后初始化数据：</description>
    </item>
    
    <item>
      <title>LVS负载均衡</title>
      <link>https://blog.javachen.space/2019/06/29/lvs/</link>
      <pubDate>Sat, 29 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>https://blog.javachen.space/2019/06/29/lvs/</guid>
      <description>1、介绍 ​ 负载均衡(Load Balance)是一种服务器或网络设备的集群技术。负载均衡将特定的业务(网络服务、网络流量等)分担给多个服务器或</description>
    </item>
    
    <item>
      <title>Nginx服务器</title>
      <link>https://blog.javachen.space/2019/06/29/nginx/</link>
      <pubDate>Sat, 29 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>https://blog.javachen.space/2019/06/29/nginx/</guid>
      <description>1、常用Web服务器介绍 apache、Nginx、tomcat、weblogic、iis、jboss、websphere、jetty、net</description>
    </item>
    
    <item>
      <title>OSI参考模型</title>
      <link>https://blog.javachen.space/2019/06/29/osi/</link>
      <pubDate>Sat, 29 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>https://blog.javachen.space/2019/06/29/osi/</guid>
      <description>1、OSI参考模型 ## 1.1、OSI的来源 OSI（Open System Interconnect），即开放式系统互联。 一般都叫OSI参考模型，是ISO（国</description>
    </item>
    
    <item>
      <title>Bash条件判断</title>
      <link>https://blog.javachen.space/2015/07/08/bash-if-else/</link>
      <pubDate>Wed, 08 Jul 2015 00:00:00 +0000</pubDate>
      
      <guid>https://blog.javachen.space/2015/07/08/bash-if-else/</guid>
      <description>每个完整并且合理的程序语言都具有条件判断的功能，并且可以根据条件测试的结果做下一步的处理。Bash有test命令、各种中括号和圆括号操作，和</description>
    </item>
    
    <item>
      <title>Bash中的变量</title>
      <link>https://blog.javachen.space/2015/07/07/bash-variable/</link>
      <pubDate>Tue, 07 Jul 2015 00:00:00 +0000</pubDate>
      
      <guid>https://blog.javachen.space/2015/07/07/bash-variable/</guid>
      <description>变量是脚本编程中进行数据表现的一种方法。说白了，变量不过是计算机为了保留数据项，而在内存中分配的一个位置或一组位置的标识或名字。变量既可以出</description>
    </item>
    
    <item>
      <title>Bash中的特殊字符</title>
      <link>https://blog.javachen.space/2015/07/06/bash-special-characters/</link>
      <pubDate>Mon, 06 Jul 2015 00:00:00 +0000</pubDate>
      
      <guid>https://blog.javachen.space/2015/07/06/bash-special-characters/</guid>
      <description>Bash中，用在脚本和其他地方的字符叫做特殊字符。下面依次举例介绍每个字符的用途。 # 行首以#(#!是个例外)开头是注释。 1 # This line is a comment. 注释也</description>
    </item>
    
    <item>
      <title>高级Bash脚本编程入门</title>
      <link>https://blog.javachen.space/2015/06/29/advanced-bash-script-programming/</link>
      <pubDate>Mon, 29 Jun 2015 00:00:00 +0000</pubDate>
      
      <guid>https://blog.javachen.space/2015/06/29/advanced-bash-script-programming/</guid>
      <description>最近在看《Advanced Bash Scripting Guide》这本书，第二章举了一个清除日志的例子，来讲述如何使用Bash进行编程并聊到了一些编程规范。本文主要</description>
    </item>
    
    <item>
      <title>安装Azkaban</title>
      <link>https://blog.javachen.space/2014/08/25/install-azkaban/</link>
      <pubDate>Mon, 25 Aug 2014 00:00:00 +0000</pubDate>
      
      <guid>https://blog.javachen.space/2014/08/25/install-azkaban/</guid>
      <description>Azkaban 是由 Linkedin 开源的一个批量工作流任务调度器。用于在一个工作流内以一个特定的顺序运行一组工作和流程。Azkaban 定义了一种 KV 文件格式来建立任务之</description>
    </item>
    
    <item>
      <title>Storm集群安装部署步骤</title>
      <link>https://blog.javachen.space/2014/06/19/how-to-install-and-deploy-a-storm-cluster/</link>
      <pubDate>Thu, 19 Jun 2014 00:00:00 +0000</pubDate>
      
      <guid>https://blog.javachen.space/2014/06/19/how-to-install-and-deploy-a-storm-cluster/</guid>
      <description>开始学习Storm，本文主要记录Storm集群安装部署步骤，不包括对Storm的介绍。 安装storm集群，需要依赖以下组件： Zookeeper Python Zeromq Storm JDK JZMQ 故安</description>
    </item>
    
    <item>
      <title>重装Mac系统之后</title>
      <link>https://blog.javachen.space/2014/04/23/after-reinstall-mac/</link>
      <pubDate>Wed, 23 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>https://blog.javachen.space/2014/04/23/after-reinstall-mac/</guid>
      <description>本文主要记录重装Mac系统之后的一些软件安装和环境变量配置。 系统偏好设置 触控板 系统设置 &amp;gt; 触控板 光标与点击 ✓ 轻拍来点按 ✓ 辅助点按 ✓ 查找 ✓ 三指拖</description>
    </item>
    
    <item>
      <title>使用Lua和OpenResty搭建验证码服务器</title>
      <link>https://blog.javachen.space/2014/04/01/deploy-a-captcha-server-using-lua-and-openresty/</link>
      <pubDate>Tue, 01 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>https://blog.javachen.space/2014/04/01/deploy-a-captcha-server-using-lua-and-openresty/</guid>
      <description>Lua下有个Lua-GD图形库，通过简单的Lua语句就能控制、生成图片。 环境说明： 操作系统：RHEL6.4 RHEL系统默认已安装RPM包的L</description>
    </item>
    
    <item>
      <title>使用SaltStack安装JDK1.6</title>
      <link>https://blog.javachen.space/2014/04/01/install-jdk-with-saltstack/</link>
      <pubDate>Tue, 01 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>https://blog.javachen.space/2014/04/01/install-jdk-with-saltstack/</guid>
      <description>创建states文件 在/srv/salt目录下创建jdk目录，并在jdk目录创建init.sls文件，init.sls文件内容如下： 1 2 3 4</description>
    </item>
    
    <item>
      <title>使用Vagrant创建虚拟机</title>
      <link>https://blog.javachen.space/2014/02/23/create-virtualbox-by-vagrant/</link>
      <pubDate>Sun, 23 Feb 2014 00:00:00 +0000</pubDate>
      
      <guid>https://blog.javachen.space/2014/02/23/create-virtualbox-by-vagrant/</guid>
      <description>1、安装VirtualBox 下载地址：https://www.virtualbox.org/wiki/Downloads/ 提示：虽然 Vagrant 也支持</description>
    </item>
    
    <item>
      <title>All Things OpenTSDB</title>
      <link>https://blog.javachen.space/2014/01/22/all-things-opentsdb/</link>
      <pubDate>Wed, 22 Jan 2014 00:00:00 +0000</pubDate>
      
      <guid>https://blog.javachen.space/2014/01/22/all-things-opentsdb/</guid>
      <description>1. OpenTSDB介绍 OpenTSDB用HBase存储所有的时序（无须采样）来构建一个分布式、可伸缩的时间序列数据库。它支持秒级数据采集所有</description>
    </item>
    
    <item>
      <title>Git配置和一些常用命令</title>
      <link>https://blog.javachen.space/2013/12/27/some-git-configs-and-cammands/</link>
      <pubDate>Fri, 27 Dec 2013 00:00:00 +0000</pubDate>
      
      <guid>https://blog.javachen.space/2013/12/27/some-git-configs-and-cammands/</guid>
      <description>Git是一个分布式版本控制／软件配置管理软件，原来是linux内核开发者林纳斯·托瓦兹（Linus Torvalds）为了更好地管理linux</description>
    </item>
    
    <item>
      <title>SaltStack学习笔记</title>
      <link>https://blog.javachen.space/2013/11/18/study-note-of-saltstack/</link>
      <pubDate>Mon, 18 Nov 2013 00:00:00 +0000</pubDate>
      
      <guid>https://blog.javachen.space/2013/11/18/study-note-of-saltstack/</guid>
      <description>1. 关于本文档 这份文档如其名，是我自己整理的学习 SaltStack 的过程记录。只是过程记录，没有刻意像教程那样去做。所以呢，从前至后，中间不免有一些概念不清不</description>
    </item>
    
    <item>
      <title>使用SaltStack安装JBoss</title>
      <link>https://blog.javachen.space/2013/11/16/install-jboss-with-saltstack/</link>
      <pubDate>Sat, 16 Nov 2013 00:00:00 +0000</pubDate>
      
      <guid>https://blog.javachen.space/2013/11/16/install-jboss-with-saltstack/</guid>
      <description>SaltStack是一个具备puppet与func功能为一身的集中化管理平台，其基于python实现，功能十分强大，各模块融合度及复用性极高</description>
    </item>
    
    <item>
      <title>安装SaltStack和Halite</title>
      <link>https://blog.javachen.space/2013/11/11/install-saltstack-and-halite/</link>
      <pubDate>Mon, 11 Nov 2013 00:00:00 +0000</pubDate>
      
      <guid>https://blog.javachen.space/2013/11/11/install-saltstack-and-halite/</guid>
      <description>本文记录安装SaltStack和halite过程。 首先准备两台rhel或者centos虚拟机sk1和sk2，sk1用于安装master，sk</description>
    </item>
    
  </channel>
</rss>