<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>java on JavaChen Blog - Ramblings of a coder</title>
    <link>http://localhost:1313/categories/java/</link>
    <description>Recent content in java on JavaChen Blog - Ramblings of a coder</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Mon, 01 Jul 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://localhost:1313/categories/java/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Struts2</title>
      <link>http://localhost:1313/2019/07/01/struts2/</link>
      <pubDate>Mon, 01 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/2019/07/01/struts2/</guid>
      <description>Struts2概述 ​Struts2 是一个基于 MVC 设计模式的 Web 应用框架，它本质上相当于一个 Servlet，在 MVC 设计模式中，Struts2 作为控制</description>
    </item>
    
    <item>
      <title>Java Server Faces</title>
      <link>http://localhost:1313/2019/06/29/jsf/</link>
      <pubDate>Sat, 29 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/2019/06/29/jsf/</guid>
      <description>1、JSF介绍 JSF 的诞生 JSF的诞生还要追溯到2001年，在2001年5月，Sun制定了一个用户界面框架的规范JSR#127，而JSF 规范的1</description>
    </item>
    
    <item>
      <title>Java Web框架发展历程</title>
      <link>http://localhost:1313/2019/06/29/java-web-framework/</link>
      <pubDate>Sat, 29 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/2019/06/29/java-web-framework/</guid>
      <description>Model1 ​在 Web 早期的开发中，通常采用的都是 Model1 模式，就是使用 JSP+JavaBean 技术，将页面显示和业务逻辑处理分开，由JSP页面来接收客户端请求，用JavaBean或</description>
    </item>
    
    <item>
      <title>MyBatis源码分析：SqlSession</title>
      <link>http://localhost:1313/2016/04/21/mybatis-sqlSession-source-code/</link>
      <pubDate>Thu, 21 Apr 2016 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/2016/04/21/mybatis-sqlSession-source-code/</guid>
      <description>从这段代码中可以看到MyBatis的初始化过程： 1 2 3 4 5 6 7 8 DataSource dataSource = ...; TransactionFactory transactionFactory = new JdbcTransactionFactory(); Environment environment = new Environment(&amp;#34;Production&amp;#34;, transactionFactory, dataSource); Configuration configuration = new Configuration(environment); configuration.setLazyLoadingEnabled(true); configuration.getTypeAliasRegistry().registerAlias(Blog.class); configuration.addMapper(BlogMapper.class); SqlSessionFactory sqlSessionFactory = new SqlSessionFactoryBuilder().build(configuration); 在创建了Confi</description>
    </item>
    
    <item>
      <title>MyBatis源码分析：如何解析配置文件</title>
      <link>http://localhost:1313/2016/04/21/how-to-parse-mybatis-configuration/</link>
      <pubDate>Thu, 21 Apr 2016 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/2016/04/21/how-to-parse-mybatis-configuration/</guid>
      <description>MyBatis可以使用xml或者注解的方式进行配置，不管是哪种方式，最终会将获取到的配置参数设置到Configuration类中，例如，Sq</description>
    </item>
    
    <item>
      <title>UML类之间关系</title>
      <link>http://localhost:1313/2016/04/01/uml-class-realation/</link>
      <pubDate>Fri, 01 Apr 2016 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/2016/04/01/uml-class-realation/</guid>
      <description>前面两篇文章讲到了使用PlantUML来画类图，要想准确地画出类与类之间的关系，必须理清类和类之间的关系。类的关系有泛化(Generaliz</description>
    </item>
    
    <item>
      <title>PlantUML安装和使用</title>
      <link>http://localhost:1313/2016/02/29/plantuml-install-and-usage/</link>
      <pubDate>Mon, 29 Feb 2016 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/2016/02/29/plantuml-install-and-usage/</guid>
      <description>什么是PlantUML PlantUML是一个快速创建UML图形的组件，PlantUML支持的图形有： sequence diagram, use case diagram, class diagram, activity diagram, component diagram, state diagram, object diagram, wireframe graphical interface Pl</description>
    </item>
    
    <item>
      <title>PlantUML类图</title>
      <link>http://localhost:1313/2016/02/29/plantuml-class-diagram/</link>
      <pubDate>Mon, 29 Feb 2016 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/2016/02/29/plantuml-class-diagram/</guid>
      <description>类之间的关系 PlantUML用下面的符号来表示类之间的关系： 泛化，Generalization：&amp;lt;|-- 关联，Association：</description>
    </item>
    
    <item>
      <title>MyBatis源码分析：Configuration</title>
      <link>http://localhost:1313/2016/02/26/source-code-analytic-of-mybatis-configuration/</link>
      <pubDate>Fri, 26 Feb 2016 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/2016/02/26/source-code-analytic-of-mybatis-configuration/</guid>
      <description>MyBatis依赖的jar不多，而且代码行数也没多少，其中使用了大量的设计模式，值得好好学习。下图是MyBatis的一张架构图，来自Java</description>
    </item>
    
    <item>
      <title>快速了解RESTEasy</title>
      <link>http://localhost:1313/2015/03/10/quick-start-of-resteasy/</link>
      <pubDate>Tue, 10 Mar 2015 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/2015/03/10/quick-start-of-resteasy/</guid>
      <description>什么是 RESTEasy RESTEasy 是 JBoss 的一个开源项目，提供各种框架帮助你构建 RESTful Web Services 和 RESTful Java 应用程序。它是 JAX-RS 规范的一个完整实现并通过 JCP 认证。作为一个 JBOSS 的项目，它当然能和</description>
    </item>
    
    <item>
      <title>Java笔记：异常</title>
      <link>http://localhost:1313/2015/03/04/note-about-java-exception/</link>
      <pubDate>Wed, 04 Mar 2015 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/2015/03/04/note-about-java-exception/</guid>
      <description>定义 在《java编程思想》中这样定义异常：阻止当前方法或作用域继续执行的问题。异常是Java程序设计中不可分割的一部分，如果不了解如何使用它</description>
    </item>
    
    <item>
      <title>Maven的一些技巧</title>
      <link>http://localhost:1313/2015/01/20/maven-skills/</link>
      <pubDate>Tue, 20 Jan 2015 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/2015/01/20/maven-skills/</guid>
      <description>本文主要收集一些 Maven 的使用技巧，包括 Maven 常见命令、创建多模块项目、上传本地 jar 到插件以及常用的插件等等，本篇文章会保持不停的更新。 创建 maven 项目 1 $ mvn</description>
    </item>
    
    <item>
      <title>Gradle构建多模块项目</title>
      <link>http://localhost:1313/2015/01/07/build-multi-module-project-with-gradle/</link>
      <pubDate>Wed, 07 Jan 2015 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/2015/01/07/build-multi-module-project-with-gradle/</guid>
      <description>废话不多说，直接进入主题。 1. 创建项目 首先创建项目，名称为 test： 1 2 mkdir test &amp;amp;&amp;amp; cd test gradle init 这时候的项目结构如下： 1 2 3 4 5 6 7 8 9 10 11 12 ➜ test tree . ├</description>
    </item>
    
    <item>
      <title>编译Dubbo源码并测试</title>
      <link>http://localhost:1313/2014/09/24/compile-and-test-dubbo/</link>
      <pubDate>Wed, 24 Sep 2014 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/2014/09/24/compile-and-test-dubbo/</guid>
      <description>Dubbo是阿里巴巴内部的SOA服务化治理方案的核心框架，每天为2000+ 个服务提供3,000,000,000+ 次访问量支持，并被广泛应用于</description>
    </item>
    
    <item>
      <title>使用Gradle构建项目</title>
      <link>http://localhost:1313/2014/09/15/build-project-with-gradle/</link>
      <pubDate>Mon, 15 Sep 2014 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/2014/09/15/build-project-with-gradle/</guid>
      <description>Gradle 是一款基于 Groovy 语言、免费开源的构建工具，它既保持了 Maven 的优点，又通过使用 Groovy 定义的 DSL 克服了 Maven 中使用 XML 繁冗以及不灵活的缺点。 Gradle 官方网站：http:</description>
    </item>
    
    <item>
      <title>使用Groovy操作文件</title>
      <link>http://localhost:1313/2014/09/12/file-operation-in-groovy/</link>
      <pubDate>Fri, 12 Sep 2014 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/2014/09/12/file-operation-in-groovy/</guid>
      <description>Java 读写文件比较麻烦，那 Groovy 操作文件又如何呢？ 1. 读文件 读文件内容 在groovy中输出文件的内容： 1 println new File(&amp;#34;tmp.csv&amp;#34;).text 上面代码非常简单，没有流的出现，没有资源</description>
    </item>
    
    <item>
      <title>从零开始创建Grails应用</title>
      <link>http://localhost:1313/2014/09/09/create-a-grails-app-step-by-step/</link>
      <pubDate>Tue, 09 Sep 2014 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/2014/09/09/create-a-grails-app-step-by-step/</guid>
      <description>本篇文章主要介绍如何从零开始一步一步创建一个 Grails 应用程序。整个过程中，你将学到如何改变 Grails 运行的端口，了解 Grails 应用的基础组成部分(领域类、控制器和</description>
    </item>
    
    <item>
      <title>Groovy语法介绍</title>
      <link>http://localhost:1313/2014/09/05/about-groovy/</link>
      <pubDate>Fri, 05 Sep 2014 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/2014/09/05/about-groovy/</guid>
      <description>1. 介绍 Groovy 是基于 JRE 的脚本语言，和Perl，Python等等脚本语言一样，它能以快速简洁的方式来完成一些工作：如访问数据库，编写单元测试用例，快</description>
    </item>
    
    <item>
      <title>Effective Java 笔记</title>
      <link>http://localhost:1313/2014/06/17/note-about-effective-java/</link>
      <pubDate>Tue, 17 Jun 2014 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/2014/06/17/note-about-effective-java/</guid>
      <description>创建和销毁对象 NO.1 考虑用静态工厂方法代替构造函数 静态工厂方法好处： 1、构造函数有命名的限制，而静态方法有自己的名字，更加易于理解。 2、静态工厂</description>
    </item>
    
    <item>
      <title>Java笔记：Java内存模型</title>
      <link>http://localhost:1313/2014/04/09/note-about-jvm-memery-model/</link>
      <pubDate>Wed, 09 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/2014/04/09/note-about-jvm-memery-model/</guid>
      <description>1. 基本概念 《深入理解Java内存模型》详细讲解了java的内存模型，这里对其中的一些基本概念做个简单的笔记。以下内容摘自 《深入理解Java内</description>
    </item>
    
    <item>
      <title>Java笔记：集合框架实现原理</title>
      <link>http://localhost:1313/2013/06/08/java-collection-framework/</link>
      <pubDate>Sat, 08 Jun 2013 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/2013/06/08/java-collection-framework/</guid>
      <description>这篇文章是对http://www.cnblogs.com/skywang12345/category/455711.html中java集合框</description>
    </item>
    
  </channel>
</rss>